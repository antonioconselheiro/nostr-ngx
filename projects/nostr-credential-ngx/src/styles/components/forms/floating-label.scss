///
/// This is a container for your input form field.
/// The placeholder turn into label when the field is focused or when it has value.
/// You can include buttons inside the input.
/// You can show form erros.
/// 
/// @group Components
/// @class floatingLabel
/// 
/// @example
/// ```
/// <div class="floatingLabel">
///   <input
///     required
///     type="password"
///     name="nsec"
///     maxlength="64"
///     formControlName="nsec"
///   />
///   <label for="authModalNsecField">nsec</label>
/// 
///   <button type="button" class="bordered svgButton">
///     <nostr-svg-render name="eye"></nostr-svg-render>
///   </button>
/// </div>
/// ```
///
/// @example
/// ```
/// <div class="floatingLabel error">
///   <input
///     required
///     type="password"
///     name="nsec"
///     maxlength="64"
///     formControlName="nsec"
///   />
///   <label for="authModalNsecField">nsec</label>
/// 
///   <button type="button" class="bordered svgButton">
///     <nostr-svg-render name="eye"></nostr-svg-render>
///   </button>
/// 
///   <span class="error">nsec is required</span>
/// </div>
/// ```
.floatingLabel {
  display: flex;
  align-items: center;
  position: relative;
  background-color: var(--base);
  border: 1px solid var(--separator);
  border-radius: 15px;
  height: 3.5rem;
  margin-top: 1.5rem;
  margin-bottom: 1.75rem;

  &.error {
    border: 1px solid var(--error);

    label {
      color: var(--error);
    }

    .error {
      display: block;
      color: var(--error);
      font-size: 13px;
      position: absolute;
      top: 59px;
      left: 20px;
    }
  }

  label {
    position: absolute;
    font-size: 18px;
    top: 20px;
    left: 20px;
    pointer-events: none;
    transition: all 0.3s ease;
    color: var(--lowContrast);
  }

  input,
  select {
    width: 100%;
    padding: 10px;
    border-radius: 15px;
    background-color: transparent;
    color: var(--contrast);
    outline: none;
    margin-top: 1rem;
    padding-left: 20px;
    box-sizing: border-box;
    border: 0;

    &:focus+label,
    &:not(:placeholder-shown)+label {
      top: 4px;
      left: 20px;
      font-size: 13px;
      color: var(--contrast);
    }

    &:focus+label {
      color: var(--primary);
    }
  }

  select {
    appearance: none;

    option {
      background-color: var(--base);
    }
  }

  &:has(> select):after {
    content: '';
    width: 22.5px;
    height: 22.5px;
    background-color: var(--lowContrast);
    mask-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" stroke="currentColor" fill="currentColor" stroke-width="1" viewBox="0 0 24 24" aria-hidden="true"><g><path d="M3.543 9.96l1.414-1.42L12 14.59l7.043-7.05 1.414 1.42L12 17.41 3.543 8.96z"></path></g></svg>');
    display: block;
    position: absolute;
    right: 1rem;
    pointer-events: none;
  }

  &:focus-within {
    border-color: transparent;
    box-shadow: 0 0 0 2px inset var(--primary);

    &:has(> select):after {
      background-color: var(--primary);
    }
  }

  .svgButton {
    margin-right: 1rem;
  }
}